[project]

name = "ebfloeseg" # TODO: choose better name?

# Versions should comply with PEP 440:
# https://www.python.org/dev/peps/pep-0440/
#
# For a discussion on single-sourcing the version, see
# https://packaging.python.org/guides/single-sourcing-package-version/
# version = "0.0.0"  # Required
dynamic = ["version"]

description = "Icefloe segmentation by Buckley" # Optional

readme = "README.md" # Optional

requires-python = ">=3.11"

license = { file = "LICENSE.txt" }

# This field adds keywords for your project which will appear on the
# project page. What does your project relate to?
#
# Note that this is a list of additional keywords, separated
# by commas, to be used to assist searching for the distribution in a
# larger catalog.
keywords = [
  "earth observation",
  "modis",
  "icefloe",
  "segmentation",
] # TODO: add more keywords

# This should be your name or the name of the organization who originally
# authored the project, and a valid email address corresponding to the name
# listed.
#TODO: CHANGE THAT
authors = [
  { name = "Ellen Buckley", email = "ellen_buckley@brown.edu" }, # Optional
]

# This should be your name or the names of the organization who currently
# maintains the project, and a valid email address corresponding to the name
# listed.
maintainers = [
  # Optional
]

# Classifiers help users find your project by categorizing it.
#
# For a list of valid classifiers, see https://pypi.org/classifiers/
classifiers = [ # TODO: update these
  # How mature is this project? Common values are
  #   3 - Alpha
  #   4 - Beta
  #   5 - Production/Stable
  "Development Status :: 3 - Alpha",

  # Indicate who your project is intended for
  "Intended Audience :: Science/Research",
  "Topic :: Scientific/Engineering :: GIS",


  # Pick your license as you wish
  # TODO: update license
  "License :: OSI Approved :: MIT License",

  # Specify the Python versions you support here. In particular, ensure
  # that you indicate you support Python 3. These classifiers are *not*
  # checked by "pip install". See instead "python_requires" below.
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3 :: Only",
]

# This field lists other packages that your project depends on to run.
# Any package you put here will be installed by pip when your project is
# installed, so they must be valid existing projects.
dependencies = [ # Optional
  "rasterio>=1.3.0, <2.0.0",
  "pandas >=2.2.0, <3.0.0",
  "matplotlib >=3.8, <4.0.0",
  "numpy >=1.26, <2.0.0",
  "scikit-image >=0.23.0, <1.0.0",
  "scipy >=1.13, <2.0.0",
  "opencv-python >=4.9, <5.0.0",
  "typer >=0.12.3, <1.0.0",
  "requests"
]

[project.optional-dependencies] # Optional
dev = [
  "check-manifest",
  "black[jupyter]",
  "ipython",
  "ptpython",
  "ipykernel",
  "nb-clean",
  "imagecodecs==2024.6.1", # for viewing tif files with matplotlib
  "ebfloeseg[test]",
]
test = [
  "coverage",
  "pytest >=7.4.4, <8.0.0",
  "pytest-xdist >=3.6.0, <4.0.0",
  "pytest-cov >=5.0.0, <6.0.0",
  "requests_mock",
]

# List URLs that are relevant to your project
#
# This field corresponds to the "Project-URL" and "Home-Page" metadata fields:
# https://packaging.python.org/specifications/core-metadata/#project-url-multiple-use
# https://packaging.python.org/specifications/core-metadata/#home-page-optional
#
# Examples listed include a pattern for specifying where the package tracks
# issues, where the source is hosted, where to say thanks to the package
# maintainers, and where to support the project financially. The key is
# what's used to render the link text on PyPI.
[project.urls] # Optional
"Homepage" = "https://github.com/WilhelmusLab/Segmentation_EB"
"Bug Reports" = "https://github.com/WilhelmusLab/Segmentation_EB/issues"
"Source" = "https://github.com/WilhelmusLab/Segmentation_EB"

# The following would provide a command line executable called `fsdproc`
# which executes the function `app` in the `ebfloeseg.app` from this package when invoked.
[project.scripts] # Optional
fsdproc = "ebfloeseg.app:app" # TODO: choose better name?


# This is configuration specific to the `setuptools` build backend.
# If you are using a different build backend, you will need to change this.
[tool.setuptools]
# If there are data files included in your packages that need to be
# installed, specify them here.
# TODO: ADD ANY DATA FILES WE WANT TO HAVE
# package-data = {"ebfloeseg" = ["config/*.json"]}

[tool.setuptools.packages.find]
where = ["src"]

[build-system]
# These are the assumed default build requirements from pip:
# https://pip.pypa.io/en/stable/reference/pip/#pep-517-and-518-support
#requires = ["setuptools>=43.0.0", "wheel","hatchling"]
#build-backend = "hatchling.build"
requires = ["setuptools>=43.0.0", "setuptools_scm>=8", "wheel"]
build-backend = "setuptools.build_meta"

[tool.pytest.ini_options]
markers = [
  "smoke: mark a test as a smoke test.",
  "slow: mark tests that run slowly.",
]

[tool.coverage.run]
omit = [
  "src/ebfloeseg/process.py", # tested in test_app.py
]


[tool.black]
line-length = 88
target-version = ['py311']